{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "description": "Sends a tip to an user or to the author of post.",
      "type": "object",
      "required": [
        "send_tip"
      ],
      "properties": {
        "send_tip": {
          "type": "object",
          "required": [
            "amount",
            "target"
          ],
          "properties": {
            "amount": {
              "description": "Amount from which fees will be calculated.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Coin"
              }
            },
            "target": {
              "description": "Tip target.",
              "allOf": [
                {
                  "$ref": "#/definitions/Target"
                }
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Updates the fee required to execute [`ExecuteMsg::SendTip`].",
      "type": "object",
      "required": [
        "update_service_fee"
      ],
      "properties": {
        "update_service_fee": {
          "type": "object",
          "properties": {
            "new_fee": {
              "description": "New service fee required to execute [`ExecuteMsg::SendTip`]. If `None` no fees will be collected from the tipped amount.",
              "anyOf": [
                {
                  "$ref": "#/definitions/ServiceFee"
                },
                {
                  "type": "null"
                }
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Updates the contract admin.",
      "type": "object",
      "required": [
        "update_admin"
      ],
      "properties": {
        "update_admin": {
          "type": "object",
          "required": [
            "new_admin"
          ],
          "properties": {
            "new_admin": {
              "description": "Address of the new contract admin.",
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Updates the number of record saved in the tips history.",
      "type": "object",
      "required": [
        "update_saved_tips_history_size"
      ],
      "properties": {
        "update_saved_tips_history_size": {
          "type": "object",
          "required": [
            "new_size"
          ],
          "properties": {
            "new_size": {
              "description": "New tips history size.",
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Claims the fees paid to execute the contract.",
      "type": "object",
      "required": [
        "claim_fees"
      ],
      "properties": {
        "claim_fees": {
          "type": "object",
          "required": [
            "receiver"
          ],
          "properties": {
            "receiver": {
              "description": "Address to which fees will be sent.",
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Coin": {
      "type": "object",
      "required": [
        "amount",
        "denom"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "denom": {
          "type": "string"
        }
      }
    },
    "Decimal": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "ServiceFee": {
      "description": "Fees required to execute [`ExecuteMsg::SendTip`].",
      "oneOf": [
        {
          "description": "Represents a fixed fee that the sender needs to pay in order to send the tip.",
          "type": "object",
          "required": [
            "fixed"
          ],
          "properties": {
            "fixed": {
              "type": "object",
              "required": [
                "amount"
              ],
              "properties": {
                "amount": {
                  "description": "Coins that the sender needs to pay.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Coin"
                  }
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Represents a percentage that the sender needs to pay in order to send the tip.",
          "type": "object",
          "required": [
            "percentage"
          ],
          "properties": {
            "percentage": {
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "value": {
                  "description": "Percentage value.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Decimal"
                    }
                  ]
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Target": {
      "description": "Enum that represents a tip target.",
      "oneOf": [
        {
          "description": "Tip related to an user's post to show their support towards a specific content.",
          "type": "object",
          "required": [
            "content_target"
          ],
          "properties": {
            "content_target": {
              "type": "object",
              "required": [
                "post_id"
              ],
              "properties": {
                "post_id": {
                  "description": "Post id.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Tip for an user.",
          "type": "object",
          "required": [
            "user_target"
          ],
          "properties": {
            "user_target": {
              "type": "object",
              "required": [
                "receiver"
              ],
              "properties": {
                "receiver": {
                  "description": "Address of the user that will receive the tip.",
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "Uint64": {
      "description": "A thin wrapper around u64 that is using strings for JSON encoding/decoding, such that the full u64 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u64` to get the value out:\n\n``` # use cosmwasm_std::Uint64; let a = Uint64::from(42u64); assert_eq!(a.u64(), 42);\n\nlet b = Uint64::from(70u32); assert_eq!(b.u64(), 70); ```",
      "type": "string"
    }
  }
}
